# https://school.programmers.co.kr/learn/courses/30/lessons/12939

# 나의 풀이
def solution(s):
    s = sorted(map(int, s.split(' ')))              # 한 번 정렬한 후
    return str(s[0]) + ' ' + str(s[-1])             # 맨 앞과 맨 뒤의 값 가져오기

'''
테스트 1 〉	통과 (0.03ms, 10.3MB)
테스트 2 〉	통과 (0.04ms, 10.3MB)
테스트 3 〉	통과 (0.02ms, 10.1MB)
테스트 4 〉	통과 (0.03ms, 10.4MB)
테스트 5 〉	통과 (0.04ms, 10.3MB)
테스트 6 〉	통과 (0.03ms, 10.4MB)
테스트 7 〉	통과 (0.02ms, 10.2MB)
테스트 8 〉	통과 (0.03ms, 10.3MB)
테스트 9 〉	통과 (0.02ms, 10.3MB)
테스트 10 〉	통과 (0.03ms, 10.2MB)
테스트 11 〉	통과 (0.02ms, 10.4MB)
테스트 12 〉	통과 (0.03ms, 10.3MB)
'''

# 다른 사람의 풀이
def solution(s):
    s = list(map(int,s.split()))
    return str(min(s)) + " " + str(max(s))          # 정렬 대신 min() 한 번, max() 한 번 소요

'''
테스트 1 〉	통과 (0.03ms, 10.2MB)
테스트 2 〉	통과 (0.05ms, 10.1MB)
테스트 3 〉	통과 (0.02ms, 10.3MB)
테스트 4 〉	통과 (0.03ms, 10.3MB)
테스트 5 〉	통과 (0.03ms, 10.2MB)
테스트 6 〉	통과 (0.03ms, 10.2MB)
테스트 7 〉	통과 (0.02ms, 10.1MB)
테스트 8 〉	통과 (0.03ms, 10.2MB)
테스트 9 〉	통과 (0.03ms, 10.2MB)
테스트 10 〉	통과 (0.05ms, 10.2MB)
테스트 11 〉	통과 (0.02ms, 10.2MB)
테스트 12 〉	통과 (0.03ms, 10.3MB)
'''

'''
회고 / TIL
- 매우 쉬운 문제였음.
- 다른 사람의 풀이는 min()과 max()를 각각 한 번씩 사용하는 반면, 나는 한 번의 정렬로 해결하고자 함.
- 시간 비교 결과 큰 차이는 아니지만 확실히 내 코드가 빠름.
'''