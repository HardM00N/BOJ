'''
가로의 길이가 N, 세로의 길이가 2인 직사각형 형태의 얇은 바닥이 있다. 
태일이는 이 얇은 바닥을 1 x 2의 덮개, 2 x 1의 덮개, 2 x 2의 덮개를 이용해 채우고자 한다. 

이 때 바닥을 채우는 모든 경우의 수를 구하는 프로그램을 작성하시오. 
예를 들어 2 x 3 크기의 바닥을 채우는 경우의 수는 5가지이다. 
'''

N = int(input())

dp = [0] * (N + 1)

dp[1], dp[2] = 1, 3
for i in range(3, N + 1):
    dp[i] = dp[i - 1] + dp[i - 2] * 2

print(dp[N] % 796796)

'''
회고 / TIL
- 일일이 그림을 그려서 규칙을 찾다가, N이 커질 때마다 길쭉한 직사각형 하나가 붙거나
- 정사각형 하나와 넓죽한 직사각형 2개가 추가로 붙는 경우밖에 없다는 것을 깨달았음.
- 따라서 a_i = a_i + a_i-2 + a_i-2가 되어 a_i = a_i-1 + a_i-2 * 2가 됨. 
- 타일링 문제 백준에서 예전에 풀었는데도 매번 새롭다. 어쨌든 드디어 제대로 하나 풀었음. 
'''