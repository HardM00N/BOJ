'''
행복 왕국의 왕실 정원은 체스판과 같은 8 x 8 좌표 평면이다. 
왕실 정원의 특정한 한 칸에 나이트가 서 있다. 
나이트는 매우 충성스러운 신하로서 매일 무술을 연마한다. 

나이트는 말을 타고 있기 때문에 이동을 할 때는 L자 형태로만 이동할 수 있으며 정원 밖으로는 나갈 수 없다. 
나이트는 특정한 위치에서 다음과 같은 2가지 경우로 이동할 수 있다. 

1. 수평으로 두 칸 이동한 뒤에 수직으로 한 칸 이동하기
2. 수직으로 두 칸 이동한 뒤에 수평으로 한 칸 이동하기

이처럼 8 x 8 좌표 평면상에서 나이트의 위치가 주어졌을 때, 
나이트가 이동할 수 있는 경우의 수를 출력하는 프로그램을 작성하시오. 
이 때 왕실의 정원에서 행 위치를 표현할 때는 1부터 8로 표현하며, 열 위치를 표현할 때는 a부터 h로 표현함. 

예를 들어, 만약 나이트가 a1에 있을 때 이동할 수 있는 경우의 수는 다음 2가지이다. 
a1의 위치는 좌표 평면에서 구석의 위치에 해당하며 나이트는 정원의 밖으로는 나갈 수 없기 때문이다. 

1. 오른쪽으로 두 칸 이동 후 아래로 한 칸 이동하기 (c2)
2. 아래로 두 칸 이동 후 오른쪽으로 한 칸 이동하기 (b3)

또 다른 예로 나이트가 c2에 위치해 있다면 나이트가 이동할 수 있는 경우의 수는 6가지이다.
'''

# 내 풀이
pos = input()

col = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']
row = ['1', '2', '3', '4', '5', '6', '7', '8']

pos_col = col.index(pos[0])
pos_row = row.index(pos[1])

cnt = 0

if pos_col + 2 < 8:
    if pos_row + 1 < 8:
        cnt += 1
    if pos_row - 1 >= 0:
        cnt += 1

if pos_col - 2 >= 0:
    if pos_row + 1 < 8:
        cnt += 1
    if pos_row - 1 >= 0:
        cnt += 1

if pos_row + 2 < 8:
    if pos_col + 1 < 8:
        cnt += 1
    if pos_col - 1 >= 0:
        cnt += 1

if pos_row - 2 >= 0:
    if pos_col + 1 < 8:
        cnt += 1
    if pos_col - 1 >= 0:
        cnt += 1

print(cnt)

# 4-3.py 답안 예시
# 현재 나이트의 위치 입력받기

input_data = input()
row = int(input_data[1])
column = int(int(ord(input_data[0]))) - int(ord('a')) + 1

# 나이트가 이동할 수 있는 8가지 방향 정의
steps = [(-2, -1), (-1, -2), (1, -2), (2, -1), (2, 1), (1, 2), (-1, 2), (-2, 1)]

# 8가지 방향에 대해 각 위치로 이동이 가능한지 확인
result = 0
for step in steps:
    # 이동하고자 하는 위치 확인
    next_row = row + step[0]
    next_column = column + step[1]

    # 해당 위치로 이동이 가능하다면 카운트 증가
    if next_row >= 1 and next_row <= 8 and next_column >= 1 and next_column <= 8:
        result += 1

print(result)

'''
회고 / TIL
- 체스판을 리스트로 선언하고, 현재 위치를 리스트에서의 인덱스로 나타냈음. 
- 그리고 나이트로 갈 수 있는 8가지의 방향에 대해서, 인덱스 범위 안에 포함된 (체스판을 벗어나지 않는) 경우만 카운트함. 
- 조금 무식하게 짠 거 같긴 하다...
- 동빈님의 코드는 훨씬 간결하지만, 내 풀이가 훨씬 조금 더 직관적인 것 같다. (적어도 이 문제에서는)
'''