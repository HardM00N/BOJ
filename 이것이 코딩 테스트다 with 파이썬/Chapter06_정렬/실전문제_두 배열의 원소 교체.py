'''
동빈이는 두 개의 배열 A와 B를 갖고 있다. 
두 배열은 N개의 원소로 구성되어 있으며, 배열의 원소는 모두 자연수이다. 

동빈이는 최대 K번의 바꿔치기 연산을 수행할 수 있는데, 바꿔치기 연산이란
배열 A에 있는 원소 하나와 배열 B에 있는 원소 하나를 골라서 두 원소를 서로 바꾸는 것을 말한다. 

동빈이의 최종 목표는 배열 A의 모든 원소의 합이 최대가 되도록 하는 것이며, 
여러분은 동빈이를 도와야 한다. 

N, K, 그리고 배열 A와 B의 정보가 주어졌을 때, 최대 K번의 바꿔치기 연산을 수행해 만들 수 있는
배열 A의 모든 원소의 합의 최댓값을 출력하는 프로그램을 작성하시오.
'''

# 내 풀이
_, K = map(int, input().split())

A = list(map(int, input().split()))
B = list(map(int, input().split()))

for _ in range(K):
    a, b = min(A), max(B)
    if a < b:
        A[A.index(a)], B[B.index(b)] = B[B.index(b)], A[A.index(a)]
    else:
        break

print(sum(A))

'''
회고 / TIL
- 답안 예시에서는 두 배열을 각각 오름차순 / 내림차순 정렬 후 원소를 비교했음. 
- 메커니즘은 동일한 것 같음. 나도 최댓값, 최솟값을 바꿔치기했다. 
- 파이썬에서 temp 변수 없이 swap이 되는 것은 정말 놀랍다. 
'''